/*
interface:

tty.ReadStream
stdin --> stream you can read from to get whatever the vt is typing

tty.WriteStream
stdout --> stream you can write to to send data to vt
stderr --> OTHER stream you can write to send data to vt


changeSize() --> Change the size of the virtual terminal, triggers resize event on stdout & stderr
type() --> act as if keys have been pressed
getScreen() --> Screen: Return an object representing the current state of the screen

Screen (class) -->
  getChar(x,y) --> ScreenChar
  getLine(y) --> ScreenLine

t.is(vt.getLine(3).toString().trim(), 'abc')

ScreenLine (class, is Array) -->
  toString() --> unicode characters for all the chars on the line
  getChar(x) --> ScreenChar
ScreenChar (class) -->
  toString() --> unicode characters representing the glyph at this
                 location.  May be multiple code points due to combining
                 characters.
  isBold
  isItalic
  isUnderline
  foreground
  background
